[package]
name = "ecdsa_fun"
version = "0.3.1-alpha.0"
authors = ["LLFourn <lloyd.fourn@gmail.com>"]
edition = "2018"
license = "0BSD"
homepage = "https://github.com/LLFourn/secp256kfun"
repository = "https://github.com/LLFourn/secp256kfun"
documentation = "https://docs.rs/ecdsa_fun"
description = "Bitcoin compatible ECDSA signatures based on secp256kfun"
readme = "README.md"
categories = ["cryptography", "cryptography::cryptocurrencies"]
keywords = ["bitcoin", "ecdsa", "secp256k1"]

[package.metadata.docs.rs]
features = ["serialize_hex", "serialization"]

[dependencies]
secp256kfun = { path = "../secp256kfun", version = "^0.3.1-alpha.0", default-features = false }
serde = { version = "1.0", default-features = false, optional = true, features = ["derive"] }

[dev-dependencies]
secp256k1 = { default-features = false, version = "0.17", features = ["std"] }
rand = "0.7"
criterion = "0.3"
hex-literal = "0.2"
lazy_static = "1.4"
bincode = "1.0"
sha2 = "0.9"

[[bench]]
name = "bench_ecdsa"
harness = false

[features]
default = ["std"]
all = ["std", "serialize_hex", "libsecp_compat"]
libsecp_compat = ["secp256kfun/libsecp_compat"]
std = ["alloc"]
alloc = []
serialization = ["serde", "secp256kfun/serialization"]
serialize_hex = [ "alloc", "serialization", "secp256kfun/serialize_hex"]


