[package]
name = "secp256kfun"
version = "0.7.0-pre.0"
authors = ["LLFourn <lloyd.fourn@gmail.com>"]
license = "0BSD"
homepage = "https://github.com/LLFourn/secp256kfun"
repository = "https://github.com/LLFourn/secp256kfun"
documentation = "https://docs.rs/secp256kfun"
description = "A mid-level secp256k1 library optimized for fun!"
edition = "2018"
categories = ["cryptography", "cryptography::cryptocurrencies"]
readme = "README.md"
keywords = ["bitcoin", "secp256k1"]

[package.metadata.docs.rs]
features = ["all"]

[dependencies]
digest = "0.9"
subtle = { package = "subtle-ng", version = "2" }
rand_core = { version = "0.6" }
serde_crate = { package = "serde", version = "1.0",  optional = true, default-features = false, features = ["derive"] }
# secp256kfun_k256_backend = { path = "../../k256_backend/k256", features = ["expose-field"] }
secp256kfun_k256_backend = {  version = "1.0.0", features = ["expose-field"] }
secp256kfun_parity_backend = { version = "0.1.5", optional = true }
secp256k1 = { version = "0.20", optional = true, default-features = false }
proptest = { version = "0.10", optional = true }

[dev-dependencies]
serde_json = "1"
rand = { version = "0.8" }
lazy_static = "1.4"
sha2 = "0.9"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
secp256k1 = { default-features = false, version = "0.20", features = ["std"] }
bincode = "1.0"
criterion = "0.3"

[build-dependencies]
secp256kfun_parity_backend = { version = "0.1.5", features = ["alloc"], optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"


[features]
default = ["std"]
all = ["std", "serde", "libsecp_compat", "nightly"]
alloc = ["serde_crate/alloc"]
std = ["alloc"]
libsecp_compat = ["secp256k1"]
serde = [ "serde_crate" ]
nightly = []
parity-backend = [ "secp256kfun_parity_backend" ]

[[bench]]
name = "bench_ecmult"
harness = false
